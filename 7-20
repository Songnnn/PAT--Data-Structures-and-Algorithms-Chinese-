#include<bits/stdc++.h>
using namespace std;

//明明输出无误但老是提示格式错误
//以下两个测试点的确没考虑到：
//运算数超过1位整数且有非整数出现
//运算数前有正负号

int cmp(char a,char b) //运算符a的优先级更高或相等则返回1
{
    if( a=='+' )
    {
        if( b=='-' || b=='+' ) return 1;
        else return 0;
    }
    if( a=='-' )
    {
        if( b=='-' || b=='+' ) return 1;
        else return 0;
    }
    if( a=='*' ) return 1;
    if( a=='/' ) return 1;
    return 0;
}

//STL库自带的top函数容易有段错误，自己写一个
char getTop(stack<char> &s)
{
    if( !s.empty() ) return s.top();
    return ' ';
}

int main()
{
    string str;
    cin>>str;
    stack<char> s;

    int tag=0;
    for( int i=0 ; i<str.size() ; i++ )
    {
        //后缀表达式第一个输出的肯定是数字
        //为了结尾没有多余空格，于是在这里控制
        if( str[i]>='1' && str[i]<='9' ) 
        {
            if( tag==0 )
            {
                cout<<str[i];
                tag=1;
            }
            else cout<<" "<<str[i];
        }
        else //非数字
        {
            if( str[i]=='(' ) s.push(str[i]); //左括号直接入栈即可
            else if( str[i]==')' ) 
            {
                while( getTop(s)!='(' )
                {
                    cout<<" "<<getTop(s);
                    s.pop();
                }
                s.pop();
            }
            else //运算符
            {
                while( cmp(getTop(s),str[i]) && !s.empty() ) //若栈顶的运算符优先级比此时的运算符高则栈顶元素出栈
                {
                    cout<<" "<<getTop(s);
                    s.pop();
                }
                s.push(str[i]); 
            }
        }
    }

    while( !s.empty() )
    {
        cout<<" "<<getTop(s);
        s.pop();
    }

    return 0;
}
